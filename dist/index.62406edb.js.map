{"mappings":"AAAA,MAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AAE1D,MAAM,OAAO,GAAG,SAAU,CAAC,EAAE;IAC3B,OAAO,IAAI,OAAO,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE;QACtC,UAAU,CAAC,WAAY;YACrB,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,qCAAqC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACvE,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;KACd,CAAC,CAAC;CACJ,AAAC;AAEF,MAAM,UAAU,GAAG,iBAAiB;IAClC,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,2EAA2E,CAAC;QACzG,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE;QAElC,IAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;QAExE,IAAI,EAAC,MAAM,CAAA,EAAC,GAAG,IAAI,CAAC,IAAI;QACxB,MAAM,GAAG;YACP,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,KAAK,EAAE,MAAM,CAAC,SAAS;YACvB,WAAW,EAAE,MAAM,CAAC,YAAY;YAChC,WAAW,EAAE,MAAM,CAAC,WAAW;SAChC;QACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QAEnB,MAAM,IAAI,GAAG,CAAC;;;oBAGE,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC;;kBAEvC,EAAE,MAAM,CAAC,KAAK,CAAC;;;;;;;;;uEASsC,EAAE,MAAM,CAAC,WAAW,CAAC;;;;;;;sEAOtB,EAAE,MAAM,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAgC9E,EAAE,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA,GAAG,GAAI;YAC9B,OAAM,CAAC;;;;;4CAKyB,EAAE,GAAG,CAAC,QAAQ,CAAC;;2CAEhB,EAAE,GAAG,CAAC,IAAI,CAAC;gBACtC,EAAE,GAAG,CAAC,WAAW,CAAC;;;YAGtB,CAAC,CAAA;SACR,CAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;;;;;;4CAO2B,EAAE,MAAM,CAAC,SAAS,CAAC;;;;;kBAK7C,EAAE,MAAM,CAAC,SAAS,CAAC;;;;;;;;;IASjC,CAAC;QACD,eAAe,CAAC,SAAS,GAAE,EAAE;QAC7B,eAAe,CAAC,kBAAkB,CAAC,YAAY,EAAE,IAAI,CAAC;KAEvD,CAAA,OAAO,CAAC,EAAE;QACT,KAAK,CAAC,CAAC,CAAC;KACT;CACF;AAED,UAAU,EAAE","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\nconst showRecipe = async function (){\n  try {\n    const response = await fetch('https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886')\n    const data = await response.json()\n\n    if(!response.ok) throw new Error(`${data.message} (${response.status})`)\n\n    let {recipe} = data.data\n    recipe = {\n      id: recipe.id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      sourceUrl: recipe.source_url,\n      image: recipe.image_url,\n      cookingTime: recipe.cooking_time,\n      ingredients: recipe.ingredients,\n    }\n    console.log(recipe)\n\n    const html = `\n    \n        <figure class=\"recipe__fig\">\n          <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n          <h1 class=\"recipe__title\">\n            <span>${recipe.title}</span>\n          </h1>\n        </figure>\n\n        <div class=\"recipe__details\">\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"src/img/icons.svg#icon-clock\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookingTime}</span>\n            <span class=\"recipe__info-text\">minutes</span>\n          </div>\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"src/img/icons.svg#icon-users\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--people\">${recipe.servings}</span>\n            <span class=\"recipe__info-text\">servings</span>\n\n            <div class=\"recipe__info-buttons\">\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n                </svg>\n              </button>\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          <div class=\"recipe__user-generated\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-user\"></use>\n            </svg>\n          </div>\n          <button class=\"btn--round\">\n            <svg class=\"\">\n              <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n            </svg>\n          </button>\n        </div>\n\n        <div class=\"recipe__ingredients\">\n          <h2 class=\"heading--2\">Recipe ingredients</h2>\n          <ul class=\"recipe__ingredient-list\">\n          ${recipe.ingredients.map(ing => {\n            return`\n             <li class=\"recipe__ingredient\">\n              <svg class=\"recipe__icon\">\n                <use href=\"src/img/icons.svg#icon-check\"></use>\n              </svg>\n              <div class=\"recipe__quantity\">${ing.quantity}</div>\n              <div class=\"recipe__description\">\n                <span class=\"recipe__unit\">${ing.unit}</span>\n                ${ing.description}\n              </div>\n            </li>\n            `\n    } ).join('')}\n         \n\n        <div class=\"recipe__directions\">\n          <h2 class=\"heading--2\">How to cook it</h2>\n          <p class=\"recipe__directions-text\">\n            This recipe was carefully designed and tested by\n            <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\n            directions at their website.\n          </p>\n          <a\n            class=\"btn--small recipe__btn\"\n            href=\"${recipe.sourceUrl}\"\n            target=\"_blank\"\n          >\n            <span>Directions</span>\n            <svg class=\"search__icon\">\n              <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n            </svg>\n          </a>\n        </div>\n    `\n    recipeContainer.innerHTML= ''\n    recipeContainer.insertAdjacentHTML('afterbegin', html)\n\n  }catch (e) {\n    alert(e)\n  }\n}\n\nshowRecipe()"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}